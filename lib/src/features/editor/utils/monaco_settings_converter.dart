import '../domain/editor_settings.dart';

/// Utility class to convert EditorSettings to Monaco editor format
class MonacoSettingsConverter {
  /// Convert EditorSettings to Monaco editor options format
  static Map<String, dynamic> toMonacoOptions(EditorSettings settings) {
    return {
      'theme': settings.theme,
      'fontSize': settings.fontSize,
      'fontFamily': settings.fontFamily,
      'lineHeight': settings.lineHeight,
      'letterSpacing': settings.letterSpacing,
      'lineNumbers': settings.showLineNumbers ? 'on' : 'off',
      'minimap': {
        'enabled': settings.showMinimap,
        'side': settings.minimapSide.name,
        'renderCharacters': settings.minimapRenderCharacters,
        'size': settings.minimapSize,
      },
      'renderIndentGuides': settings.showIndentGuides,
      'renderWhitespace': settings.renderWhitespace.name,
      'rulers': settings.rulers,
      'stickyScroll': {'enabled': settings.stickyScroll},
      'showFoldingControls': settings.showFoldingControls,
      'glyphMargin': settings.glyphMargin,
      'renderLineHighlight': settings.renderLineHighlight,
      'wordWrap': settings.wordWrap.name,
      'wordWrapColumn': settings.wordWrapColumn,
      'tabSize': settings.tabSize,
      'insertSpaces': settings.insertSpaces,
      'autoIndent': settings.autoIndent,
      'autoClosingBrackets': settings.autoClosingBrackets,
      'autoClosingQuotes': settings.autoClosingQuotes,
      'autoSurround': settings.autoSurround,
      'bracketPairColorization': {'enabled': settings.bracketPairColorization},
      'folding': settings.codeFolding,
      'scrollBeyondLastLine': settings.scrollBeyondLastLine,
      'smoothScrolling': settings.smoothScrolling,
      'fastScrollSensitivity': settings.fastScrollSensitivity,
      'scrollPredominantAxis': settings.scrollPredominantAxis,
      'cursorBlinking': settings.cursorBlinking.name,
      'cursorSmoothCaretAnimation': settings.cursorSmoothCaretAnimation,
      'cursorStyle': settings.cursorStyle.name,
      'cursorWidth': settings.cursorWidth,
      'multiCursorModifier': settings.multiCursorModifier.name,
      'multiCursorMergeOverlapping': settings.multiCursorMergeOverlapping,
      'formatOnPaste': settings.formatOnPaste,
      'formatOnType': settings.formatOnType,
      'quickSuggestions': settings.quickSuggestions,
      'quickSuggestionsDelay': settings.quickSuggestionsDelay,
      'suggestOnTriggerCharacters': settings.suggestOnTriggerCharacters,
      'acceptSuggestionOnEnter': settings.acceptSuggestionOnEnter.name,
      'acceptSuggestionOnCommitCharacter': settings.acceptSuggestionOnCommitCharacter,
      'snippetSuggestions': settings.snippetSuggestions.name,
      'wordBasedSuggestions': settings.wordBasedSuggestions.name,
      'parameterHints': {'enabled': settings.parameterHints},
      'hover': {'enabled': settings.hover},
      'contextmenu': settings.contextMenu,
      'find': {
        'seedSearchStringFromSelection': settings.seedSearchStringFromSelection,
      },
      'accessibilitySupport': settings.accessibilitySupport.name,
      'accessibilityPageSize': settings.accessibilityPageSize,
      'renderValidationDecorations': settings.renderValidationDecorations,
      'renderControlCharacters': settings.renderControlCharacters,
      'disableLayerHinting': settings.disableLayerHinting,
      'disableMonospaceOptimizations': settings.disableMonospaceOptimizations,
      'maxTokenizationLineLength': settings.maxTokenizationLineLength,
      'readOnly': settings.readOnly,
      'domReadOnly': settings.domReadOnly,
      'dragAndDrop': settings.dragAndDrop,
      'links': settings.links,
      'mouseWheelZoom': settings.mouseWheelZoom,
      'mouseWheelScrollSensitivity': settings.mouseWheelScrollSensitivity,
      'automaticLayout': settings.automaticLayout,
      'padding': settings.padding,
      'roundedSelection': settings.roundedSelection,
      'selectionHighlight': settings.selectionHighlight,
      'occurrencesHighlight': settings.occurrencesHighlight,
      'overviewRulerBorder': settings.overviewRulerBorder,
      'hideCursorInOverviewRuler': settings.hideCursorInOverviewRuler,
      'scrollbar': settings.scrollbar,
    };
  }
}